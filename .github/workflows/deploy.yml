name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build-and-push-web:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and Push Frontend
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/kazkazi-chat-web:latest ./web
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/kazkazi-chat-web:latest

  build-and-push-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Build and Push Backend
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/kazkazi-chat-api:latest ./api
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/kazkazi-chat-api:latest

  deploy:
    needs: 
      - build-and-push-web
      - build-and-push-api
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password ${{ secrets.GHCR_TOKEN }}
            cd ${{ secrets.EC2_PROJECT_PATH }}

            echo "NODE_ENV=production" > .env.production
            echo "NEXT_PUBLIC_API_BASE=${{ vars.API_BASE }}" >> .env.production
            echo "AUTH0_SECRET=${{ secrets.AUTH0_SECRET }}" >> .env.production
            echo "APP_BASE_URL=${{ vars.APP_BASE_URL }}" >> .env.production
            echo "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env.production
            echo "AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> .env.production
            echo "AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}" >> .env.production
            echo "AUTH0_AUDIENCE=${{ vars.AUTH0_AUDIENCE }}" >> .env.production
            echo "AUTH0_SCOPE=${{ vars.AUTH0_SCOPE }}" >> .env.production

            echo "OPENROUTER_KEY=${{ secrets.OPENROUTER_KEY }}" >> .env.production
            echo "ENV=production" >> .env.production

            docker-compose pull
            docker-compose down
            docker-compose up -d
  
  cleanup:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Cleanup old images
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker image prune -f
            docker system prune -f
            
